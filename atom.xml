<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wang Wei's Cup of Coffee]]></title>
  <link href="http://voidstart.github.io/atom.xml" rel="self"/>
  <link href="http://voidstart.github.io/"/>
  <updated>2013-11-18T22:43:51+08:00</updated>
  <id>http://voidstart.github.io/</id>
  <author>
    <name><![CDATA[Wang Wei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RoR Day 4]]></title>
    <link href="http://voidstart.github.io/blog/2013/11/18/ror-day-4/"/>
    <updated>2013-11-18T14:59:00+08:00</updated>
    <id>http://voidstart.github.io/blog/2013/11/18/ror-day-4</id>
    <content type="html"><![CDATA[<h1>Progress</h1>

<ul>
<li>More ruby syntax (require,||, bang method, predicate method)</li>
<li>Depot app (pencil and paper design, db migrate/seed, sass, validation)</li>
<li>page 108/476</li>
</ul>


<h1>&ldquo;Scaffold&rdquo;</h1>

<p>This is not a new idea. MS word has &ldquo;template&rdquo; documents.
Things are given to solve a particular common problem, with minimal defaults, which
can be viewed as &ldquo;conventions&rdquo;.</p>

<p>Common tasks like add a controller, add a table, a field, where to put stylesheets,
where to put validation, where to put tests&hellip; All have a &ldquo;conventional&rdquo; answer.</p>

<p>Developers&#8217; needs are addressed to be easy to get started. Brilliant.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RoR Day 3]]></title>
    <link href="http://voidstart.github.io/blog/2013/11/17/ror-day-3/"/>
    <updated>2013-11-17T23:43:00+08:00</updated>
    <id>http://voidstart.github.io/blog/2013/11/17/ror-day-3</id>
    <content type="html"><![CDATA[<h1>Progress</h1>

<ul>
<li>Object-Relational Mapping (ORM,Active Record)</li>
<li>Ruby Syntax (array,hash,block,exception,class,module,YAML)</li>
<li>page 70/476</li>
</ul>


<h1>&ldquo;First class function&rdquo;</h1>

<p>Block of codes can be passed to functions as <em>values</em>.
This is a powerful feature of the Ruby language.
The &ldquo;yield&rdquo; call is interesting.  For-loops can be
much different and this solves a lot of abstraction
issue with things like the &ldquo;visitor pattern&rdquo;.</p>

<p><em>Active Records</em> solves another issue with repetative
duplication logic with class objects and database
tables. They are very simular things in a way, but
are much different to access. Active Records is a
device for adapting the differences of access.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RoR Day 2]]></title>
    <link href="http://voidstart.github.io/blog/2013/11/16/ror-day-2/"/>
    <updated>2013-11-16T23:07:00+08:00</updated>
    <id>http://voidstart.github.io/blog/2013/11/16/ror-day-2</id>
    <content type="html"><![CDATA[<h1>Progress</h1>

<ul>
<li>play with &lt;% %> and &lt;%= %> syntax</li>
<li>review MVC concept</li>
<li>page 52/476</li>
</ul>


<p>(got only about 1 hour of free time today)</p>

<h1>&ldquo;Separation of Concerns&rdquo;</h1>

<p>Model, View, Controller is a good way for humans
to understand computer codes, at least some kinds
of them.</p>

<p>The particular senario this methodology addresses
is a stateful, interactive, perspective application.</p>

<p>There are many kinds of codes. It&rsquo;s hard to model
something like a device driver with MVC.</p>

<p>&ldquo;GUI + storage + business-logic&rdquo; is a very common
case, especially a website.</p>

<p>This convention forces the way of thinking, and makes
it easier to reason. In essense, MVC itself is a
design decision.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RoR Day 1]]></title>
    <link href="http://voidstart.github.io/blog/2013/11/15/ror-day-1/"/>
    <updated>2013-11-15T22:53:00+08:00</updated>
    <id>http://voidstart.github.io/blog/2013/11/15/ror-day-1</id>
    <content type="html"><![CDATA[<h1>Progress</h1>

<ul>
<li>setup rbenv,rails</li>
<li>page 47/476</li>
</ul>


<h1>&ldquo;Convention over Configuration&rdquo;</h1>

<p>I think this philosophy is quite smart.
Naming things is very hard, and a clean
convention solves lot of troubles.
Plus the cost of communication is lower.
Just by looking at a name we can know
some extra information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap...]]></title>
    <link href="http://voidstart.github.io/blog/2013/11/14/bootstrap-dot-dot-dot/"/>
    <updated>2013-11-14T22:35:00+08:00</updated>
    <id>http://voidstart.github.io/blog/2013/11/14/bootstrap-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>Hello, this post marks the beginning of my coder blog.</p>

<p>The making of this blog has been part of my efforts
to become an indie developer. I am kind of idealistic
enough to believe in <a href="http://37signals.com/remote/">remote work</a>.</p>

<p>I am getting interested in web programming recently.
For web development, <a href="http://rubyonrails.org/">Ruby on Rails</a> is of particular
interest. It&rsquo;s neat.  The community is extremely
active and vibrant. I guess I&rsquo;ll start from here,
see how it goes.</p>
]]></content>
  </entry>
  
</feed>
